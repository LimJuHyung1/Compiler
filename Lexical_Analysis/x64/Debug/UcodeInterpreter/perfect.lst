
 line       object           ucode  source program

   1    (38    1    1)                sym  1  1  1         ; i
   2    (38    1    1)                sym  1  1  2         ; j
   3    (38    1    1)                sym  1  1  3         ; k
   4    (38    1    1)                sym  1  1  4         ; rem
   5    (38    1    1)                sym  1  1  5         ; sum
   6    (38    1    1)                sym  1  1  6         ; max (constant 500)
   7    (38    1    1)     
   8    (37    1     )                bgn  1  100  1       ; 시작 블록
   9    (20  500     )                ldc  500             ; max = 500
  10    (24    1    6)                str  1  6
  11    (24    1    6)     
  12    (20    2     )                ldc  2               ; i = 2
  13    (24    1    1)                str  1  1
  14    (24    1    1)     
  15    (19    1    1)     loop_i     lod  1  1            ; while (i <= max)
  16    (19    1    6)                lod  1  6
  17    (16          )                le
  18    (28   69     )                fjp  end_main
  19    (28   69     )     
  20    (20    0     )                ldc  0               ; sum = 0
  21    (24    1    5)                str  1  5
  22    (24    1    5)     
  23    (19    1    1)                lod  1  1            ; k = i / 2
  24    (20    2     )                ldc  2
  25    ( 9          )                div
  26    (24    1    3)                str  1  3
  27    (24    1    3)     
  28    (20    1     )                ldc  1               ; j = 1
  29    (24    1    2)                str  1  2
  30    (24    1    2)     
  31    (19    1    2)     loop_j     lod  1  2            ; while (j <= k)
  32    (19    1    3)                lod  1  3
  33    (16          )                le
  34    (28   56     )                fjp  end_loop_j
  35    (28   56     )     
  36    (19    1    1)                lod  1  1            ; rem = i % j
  37    (19    1    2)                lod  1  2
  38    (10          )                mod
  39    (24    1    4)                str  1  4
  40    (24    1    4)     
  41    (19    1    4)                lod  1  4            ; if (rem == 0)
  42    (20    0     )                ldc  0
  43    (17          )                eq
  44    (28   51     )                fjp  next_j
  45    (28   51     )     
  46    (19    1    5)                lod  1  5            ; sum += j
  47    (19    1    2)                lod  1  2
  48    ( 6          )                add
  49    (24    1    5)                str  1  5
  50    (24    1    5)     
  51    (19    1    2)     next_j     lod  1  2            ; ++j
  52    ( 2          )                inc
  53    (24    1    2)                str  1  2
  54    (26   31     )                ujp  loop_j
  55    (26   31     )     
  56    (19    1    1)     end_loop_j lod  1  1            ; if (i == sum)
  57    (19    1    5)                lod  1  5
  58    (17          )                eq
  59    (28   64     )                fjp  next_i
  60    (28   64     )     
  61    (19    1    1)                lod  1  1            ; write(i)
  62    (29   -2     )                call  write          ; 출력
  63    (29   -2     )     
  64    (19    1    1)     next_i     lod  1  1            ; ++i
  65    ( 2          )                inc
  66    (24    1    1)                str  1  1
  67    (26   15     )                ujp  loop_i
  68    (26   15     )     
  69    (34          )     end_main   nop
  70    (36          )                end


   ****    Result    ****




             ##### Statistics #####


    ****  Static Instruction Counts  ****

inc    =  2       add    =  1       div    =  1       mod    =  1       
le     =  2       eq     =  2       lod    =  15      ldc    =  6       
str    =  16      ujp    =  4       fjp    =  8       call   =  2       
nop    =  1       end    =  1       bgn    =  1       sym    =  7       


    ****  Dynamic instruction counts  ****

le     =  1         lod    =  2         ldc    =  2         str    =  4         
fjp    =  1         nop    =  1         end    =  1         bgn    =  1         


 Executable instruction count  =   10

 Total execution cycle         =   70
